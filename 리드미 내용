# Hello-world
Git 및 github 연습용

|# Hello-world
|Git 및 github 연습용

목표
1. 각자 브랜치 만들기
2. 자신의 브랜치에서 readme.md 파일 수정
3. main 브랜치에 병합하기
4. 모든 작업자의 readme.md에 작성한 코드를 반영하여 최종 readme.md 파일 만들기

# 이름 
 GitHub test 중입니다. Merge 연습중입니다.
 제 이름은 한은석 입니다. 
 현장 카페인 중독자 조에 있습니다. 
 

현장실습 리드미 파일입니다.

## 김기쁨 
리드미 파일 수정 후 병합하기
충돌 연습중에 있습니다.

오늘 점심 뭐 먹어요?

## 깃허브 최진형 
- 오리가 얼면 언덕이다.
언덕??
- 팽귄이 다니는 중학교는? -> 냉장중
- 팽퀸이 다니는 고등학교? -> 냉장고
- 팽퀸이 다니는 고등학교? -> 냉장고 오마이굳니스..

## 깃허브 정상환
## 브랜치 머지 연습


도구 - 옵션 - 기본 사용자 정보에서 '이름' 을 변경하면 작성자명을 변경할 수 있습니다.

## gippeumkim_branch
Git 요약 내용

Git 기초 명령어
- clone: 원격 저장소 복사 | git clone [저장소 주소][로컬저장소 주소]
- add: 스테이지 영역에 작업 파일 추가 | git add 파일추가
- commit: 스테이지 영역의 파일을 가지고 커밋을 만듦 | git commit
- push: 원격 저장소에 커밋 업로드 | git push

파일 내용 되돌리기
- 해당 파일 선택 후 <코드 뭉치 버리기> 선택

브랜치 변경하기
- 브랜치: 기존 내용을 유지한 채 새로운 내용 추가할 때 사용 | git branch
- 체크아웃: 특정 브랜치 (혹은 커밋)으로 돌아가고 싶을 때 사용 | git checkout
  소스트리에서는 브랜치를 더블 클릭함으로써 체크아웃 할 수 있음

병합하기 (Merge) | git merge
- 헤드브랜치에 변경사항이 없고
- 병합 대상 브랜치가 헤드로부터 시작된 경우
- 아주 쉽게 병합 가능 = fast foward
- 헤드브랜치에 추가적인 커밋이 생기는 경우
- 진짜 병합이 필요해짐
- 같은 파일을 서로 다르게 작업했던 경우 충돌
- 충돌이 나도 겁내지 않기 (매우중요*)

커밋 되돌리기
- reset 사용하기: 커밋날리기, 강제푸시 필요, 가장 쉬움 | 강제푸시는 git push --force
- branch 만들어서 되돌리기: 커밋을 남기고 싶을 때, 브랜치를 남긴다 (지저분해짐)
- revert 사용하기: 커밋을 남기고 싶을 때, 커밋을 남긴다(좀 더 충돌이 많이 일어남)
  연속 되돌리기 시(revert를 revert하기), 여러 커밋을 되돌리려면 최신부터 순서대로 revert하기

Stash
- 다른 브랜치로 체크아웃하기 전, 현재 작업을 저장하는 임시 저장소
- 매우 유용함

Rebase
- merge처럼 두 브랜치를 합칠 때 사용
- 현재 브랜치가 대상 브랜치 위로 올라간다. (merge는 대상 브랜치가 현재 브랜치보다 위)
- 위험하니 조심스럽게 사용할 것 (팀원들가 소통 후 해야함! - main 브랜치를 내 개인 브랜치로 재배치 할 수 잇으므로 조심스럽게 사용해야함.)
- merge랑 유사함-브랜치 합치는 것


기타 주의사항
- 코드를 남기려고 주석을 달지 말자 
- 커밋메시지를 잘 쓰자 (매우 중요!!* 포트폴리오용)
- 한가지 구현할 때마다 커밋을 잘하자 (1일 1커밋)